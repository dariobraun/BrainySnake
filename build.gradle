buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "groovy"

    version = '1.0'
    ext {
        appName = "brainySnake"
        gdxVersion = '1.9.6'
        roboVMVersion = '2.3.1'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
        assertJVersion = '3.9.1'
        mockitoVersion = '2.0.+'
        apacheCommonsLangVersion = '3.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url 'http://repository.codehaus.org/' }
    }
    dependencies {
        // Using sfl4j allows us to replace different loggers later, if desired
        compile group: 'org.slf4j', name:'slf4j-api', version: '1.7.2'

        // sfl4j is just a facade for loggers. To actually get logging to work, you need to
        // tie it in with some actual implementation, e.g., logback
        compile group: 'ch.qos.logback', name:'logback-classic', version: '1.0.9'
        compile group: 'ch.qos.logback', name:'logback-core', version: '1.0.9'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    }
}

project(":desktop") {
    apply plugin: "java"


    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        
    }
}

project(":core") {
    apply plugin: "java"


    dependencies {
        compile project(':sampleplayer')

        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile group: 'junit', name: 'junit', version: '4.12'
        testCompile "org.mockito:mockito-all:$mockitoVersion"
        testCompile "org.assertj:assertj-core:$assertJVersion"
    }

    sourceSets {
        test {
            resources {
                srcDir "test"
            }
        }
    }
}

project(":sampleplayer") {

    apply plugin: "java"


    dependencies {
        compile project(':playercommon')

    }
}


tasks.eclipse.doLast {
    delete ".project"
}

allprojects {
    task hello {
        doLast { task ->
            println "I'm $task.project.name"
        }
    }
}